{"version":3,"file":"validator-manager.js","sourceRoot":"","sources":["../../../../src/components/validators/validator-manager.ts"],"names":[],"mappings":";;;IAGA;QAEI,0BAAoB,UAElB;YAFkB,eAAU,GAAV,UAAU,CAE5B;QAEF,CAAC;QAED,kCAAO,GAAP;YACI,KAAoB,UAAe,EAAf,KAAA,IAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe,EAAE;gBAAhC,IAAI,OAAO,SAAA;gBACZ,KAAiB,UAAa,EAAb,KAAA,OAAO,CAAC,KAAK,EAAb,cAAa,EAAb,IAAa,EAAE;oBAA3B,IAAI,IAAI,SAAA;oBACT,IAAM,KAAK,GAAG,cAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;oBAC5D,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC5B,IAAI,CAAC,OAAO,EAAE;wBACV,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;wBAC9B,OAAO,KAAK,CAAC;qBAChB;iBACJ;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC;QACL,uBAAC;IAAD,CAAC,AArBD,IAqBC","sourcesContent":["import ValidatorRuleCallable from \"./validator-rule-callable\";\nimport Form from \"../form\";\n\nexport default class ValidatorManager {\n\n    constructor(private chainRules: Array<{\n        selectorField: string, rules: Array<ValidatorRuleCallable>, messageInvalid: string\n    }>) {\n\n    }\n\n    isValid(): boolean {\n        for (let ruleSet of this.chainRules) {\n            for (let rule of ruleSet.rules) {\n                const value = Form.getValueFromField(ruleSet.selectorField);\n                const isValid = rule(value);\n                if (!isValid) {\n                    alert(ruleSet.messageInvalid);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}"]}